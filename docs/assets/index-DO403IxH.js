var __defProp=Object.defineProperty,__typeError=e=>{throw TypeError(e)},__defNormalProp=(e,t,i)=>t in e?__defProp(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,__publicField=(e,t,i)=>__defNormalProp(e,"symbol"!=typeof t?t+"":t,i),__accessCheck=(e,t,i)=>t.has(e)||__typeError("Cannot "+i),__privateGet=(e,t,i)=>(__accessCheck(e,t,"read from private field"),i?i.call(e):t.get(e)),__privateAdd=(e,t,i)=>t.has(e)?__typeError("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,i),__privateSet=(e,t,i,s)=>(__accessCheck(e,t,"write to private field"),s?s.call(e,i):t.set(e,i),i),__privateMethod=(e,t,i)=>(__accessCheck(e,t,"access private method"),i),_scene,_lastPointerDownLocation,_lastPointerUpLocation,_swipeDirection,_config,_Swipe_instances,setupEvents_fn,handlePointerDown_fn,handlePointerUp_fn,handleSwipe_fn;import{P as Phaser$1}from"./phaser-pjvDu-AS.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const i of e)if("childList"===i.type)for(const e of i.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class Boot extends Phaser$1.Scene{constructor(){super({key:"Boot",active:!0})}preload(){this.load.setPath("assets"),this.load.image("preloadBackground","PreloadBackground.png")}create(){this.scene.start("Preload")}}const LEVEL_ASSETS=[[{key:"backgroundGround",path:"BackgroundGround.png"},{key:"backgroundAir",path:"BackgroundAir.png"},{key:"backgroundClouds",path:"BackgroundClouds.png"},{key:"backgroundNlo",path:"BackgroundNlo.png"},{key:"backgroundSpace",path:"BackgroundSpace.png"},{key:"balloon",path:"Balloon.png"},{key:"leaf",path:"Leaf.png"},{key:"leaf1",path:"Leaf1.png"}],[{key:"leaf2",path:"Leaf2.png"},{key:"leaf3",path:"Leaf3.png"},{key:"leaf4",path:"Leaf4.png"},{key:"bird1",path:"Bird1.png"},{key:"bird2",path:"Bird2.png"},{key:"bird3",path:"Bird3.png"}],[{key:"dog",path:"Dog.png"},{key:"plane",path:"Plane.png"},{key:"package",path:"Package.png"},{key:"nlo",path:"NLO.png"}],[{key:"nlo2",path:"NLO2.png"}],[{key:"saturn",path:"Saturn.png"},{key:"moon",path:"Moon.png"},{key:"frog",path:"Frog.png"},{key:"comet",path:"Comet.png"}]],LIST_OF_ENEMIES_BY_LEVEL=[["leaf","leaf1"],["leaf2","leaf3","leaf4","bird1","bird2","bird3"],["dog","plane","package"],["nlo"],["comet","frog","moon","saturn","nlo2"]];var LEVELS=(e=>(e[e.GROUND=0]="GROUND",e[e.AIR=1]="AIR",e[e.CLOUDS=2]="CLOUDS",e[e.NLO=3]="NLO",e[e.SPACE=4]="SPACE",e))(LEVELS||{}),SWIPE_DIRECTIONS=(e=>(e[e.LEFT=1]="LEFT",e[e.RIGHT=-1]="RIGHT",e[e.NONE=0]="NONE",e))(SWIPE_DIRECTIONS||{});const MAX_FLY_HEIGHT=11052,SPAWN_ENEMIES_RATE=2500,SPAWN_ENEMIES_OFFSET=200,BALLOON_STARTED_OFFSET=200,WAITING_NEW_GAME_LENGTH=3e3,PRELOAD_BAR_WIDTH=141,BACKGROUND_SPEED=1,SWIPE_VELOCITY=5,BALLOON_SCALE=.09,ENEMY_SCALE=.4,MAX_GAME_WIDTH=500;class PreloadScreenView extends Phaser.GameObjects.Container{constructor(e,t,i){super(e,t,i),__publicField(this,"_scene"),__publicField(this,"progressBar"),this._scene=e,this.build()}build(){const{width:e,height:t}=this._scene.sys.game.config,i=this._scene.add.image(0,0,"preloadBackground").setOrigin(0);i.setScale(+e/i.width,+t/i.height),this.progressBar=this._scene.add.graphics({x:+e/2-PRELOAD_BAR_WIDTH/2,y:3*+t/4});const s=this._scene.add.graphics({x:+e/2-PRELOAD_BAR_WIDTH/2,y:3*+t/4});s.fillStyle(3683949,1),s.fillRect(0,0,PRELOAD_BAR_WIDTH,5),this.add([s,this.progressBar]),this.setSize(+e,+t)}}class PreloadScreen{constructor(e,t,i){__publicField(this,"_scene"),__publicField(this,"_view"),this._scene=e,this._view=new PreloadScreenView(e,t,i),e.add.container(0,0,this._view),this._scene.load.on("progress",this.onProgress.bind(this))}onProgress(e){this._view.progressBar.clear(),this._view.progressBar.fillStyle(12005294,1),this._view.progressBar.fillRect(0,0,PRELOAD_BAR_WIDTH*e,5)}destroy(){this._scene.load.removeAllListeners("progress")}}class Preload extends Phaser$1.Scene{constructor(){super({key:"Preload",active:!1}),__publicField(this,"_loadedLevels",0),__publicField(this,"_preloadScreen")}init(){this._loadedLevels=0}preload(){this.load.setPath("assets"),this._preloadScreen=new PreloadScreen(this,0,0),this.loadingAdditionalAssets(this._loadedLevels++),this.loadingAdditionalAssets(this._loadedLevels++)}create(){for(this.scene.start("Game"),this.load.reset();this._loadedLevels<LEVEL_ASSETS.length;)this.loadingAdditionalAssets(this._loadedLevels++);this.load.start(),this.events.on(Phaser$1.Scenes.Events.DESTROY,this.destroy.bind(this))}loadingAdditionalAssets(e){this.load.setPath("assets"),LEVEL_ASSETS[e].forEach((e=>this.load.image(e.key,e.path)))}destroy(){this._preloadScreen.destroy()}}class Entity{constructor(e){__publicField(this,"_view"),__publicField(this,"_isDead"),this._view=e}get x(){return this._view.x}get view(){return this._view}set x(e){this._view.setX(e)}setVisible(e){this._view.setVisible(e)}get y(){return this._view.y}set y(e){this._view.setY(e)}get width(){return this._view.width}get height(){return this._view.height}get collisionBox(){return this._view.collisionBox}get isDead(){return this._isDead}destroy(){this._view.destroy()}dead(){this._isDead=!0}}class Balloon extends Entity{constructor(e){super(e)}}class BalloonView extends Phaser.GameObjects.Container{constructor(e,t,i){super(e,t,i),__publicField(this,"_scene"),__publicField(this,"_balloon"),__publicField(this,"_collisionBox",{x:0,y:0,width:0,height:0}),this._scene=e,this.build(t,i)}build(e,t){this._balloon=this._scene.add.image(e,t,"balloon").setOrigin(.5),this._balloon.setScale(BALLOON_SCALE,BALLOON_SCALE),this._collisionBox.width=this._balloon.width*BALLOON_SCALE,this._collisionBox.height=this._balloon.height*BALLOON_SCALE,this.addedToScene()}get collisionBox(){return this._collisionBox.x=this._balloon.x-this._collisionBox.width/2,this._collisionBox.y=this._balloon.y-this._collisionBox.height/2,this._collisionBox}get scaledWidth(){return this._balloon.width*BALLOON_SCALE}get scaledHeight(){return this._balloon.height*BALLOON_SCALE}destroy(){this._balloon.destroy()}}class BalloonFactory{constructor(e){__publicField(this,"_scene"),this._scene=e}create(e,t){const i=new BalloonView(this._scene,e,t),s=new Balloon(i);return s.x=e,s.y=t,s}}class Enemy extends Entity{constructor(e){super(e)}}class EnemyView extends Phaser.GameObjects.Container{constructor(e,t,i,s){super(e,t,i),__publicField(this,"_scene"),__publicField(this,"_enemy"),__publicField(this,"_collisionBox",{x:0,y:0,width:0,height:0}),this._scene=e,this.build(t,i,s)}build(e,t,i){const s=LIST_OF_ENEMIES_BY_LEVEL[i],n=s[Math.floor(Math.random()*s.length)];this._enemy=this._scene.add.image(e,t,n).setOrigin(.5),this._enemy.setScale(ENEMY_SCALE,ENEMY_SCALE),this._collisionBox.width=this._enemy.width*ENEMY_SCALE,this._collisionBox.height=this._enemy.height*ENEMY_SCALE,this.add([this._enemy])}destroy(){this._enemy.destroy()}get collisionBox(){return this._collisionBox.x=this._enemy.x-this._collisionBox.width/2,this._collisionBox.y=this._enemy.y-this._collisionBox.height/2,this._collisionBox}get scaledWidth(){return this._enemy.width*ENEMY_SCALE}get scaledHeight(){return this._enemy.height*ENEMY_SCALE}}class EnemyFactory{constructor(e){__publicField(this,"_scene"),this._scene=e}create(e,t,i){const s=new EnemyView(this._scene,e,t,i),n=new Enemy(s);return n.x=e,n.y=t,n}}class ResultMessageView extends Phaser.GameObjects.Container{constructor(e,t,i){super(e,t,i),__publicField(this,"_scene"),__publicField(this,"_winText"),__publicField(this,"_loseText"),this._scene=e,this.build(t,i)}build(e,t){this._winText=this.scene.add.text(e,t,"Ты победил!",{fontFamily:'Georgia, "Goudy Bookletter 1911", Times, serif',fontSize:40,color:"#00FF00"}).setOrigin(.5),this._loseText=this.scene.add.text(e,t,"Ты проиграл!",{fontFamily:'Georgia, "Goudy Bookletter 1911", Times, serif',fontSize:40,color:"#FF0000"}).setOrigin(.5),this.clearAllText()}showWinText(){this._winText.setVisible(!0)}showLoseText(){this._loseText.setVisible(!0)}clearAllText(){this._winText.setVisible(!1),this._loseText.setVisible(!1)}destroy(){this._winText.destroy(),this._loseText.destroy()}}class ResultMessage{constructor(e,t,i){__publicField(this,"_scene"),__publicField(this,"_view"),this._scene=e,this._view=new ResultMessageView(e,t,i)}showWinText(){this._view.showWinText()}showLoseText(){this._view.showLoseText()}clearAllText(){this._view.clearAllText()}}class GameScreenView extends Phaser.GameObjects.Container{constructor(e,t,i){super(e,t,i),__publicField(this,"_scene"),__publicField(this,"_backgroundScaleWidthRatio"),__publicField(this,"backgroundGround"),__publicField(this,"backgroundAir"),__publicField(this,"backgroundClouds"),__publicField(this,"backgroundNlo"),__publicField(this,"backgroundSpace"),this._scene=e,this.build()}build(){this.backgroundGround=this._scene.add.image(0,0,"backgroundGround").setOrigin(0),this.backgroundAir=this._scene.add.image(0,0,"backgroundAir").setOrigin(0),this.backgroundClouds=this._scene.add.image(0,0,"backgroundClouds").setOrigin(0),this.backgroundNlo=this._scene.add.image(0,0,"backgroundNlo").setOrigin(0),this.backgroundSpace=this._scene.add.image(0,0,"backgroundSpace").setOrigin(0),this.setBackgroundScaleWidthRatio(this.backgroundGround.width),this.createGroundLevel(),this.createAirLevel(),this.createCloudsLevel(),this.createNloLevel(),this.createSpaceLevel(),this.add([this.backgroundGround,this.backgroundAir,this.backgroundClouds,this.backgroundNlo,this.backgroundSpace])}setBackgroundScaleWidthRatio(e){const{width:t}=this._scene.sys.game.config;this._backgroundScaleWidthRatio=3*+t/e,this._backgroundScaleWidthRatio=this._backgroundScaleWidthRatio<1?1:this._backgroundScaleWidthRatio}createGroundLevel(){const{width:e,height:t}=this._scene.sys.game.config;this.backgroundGround.setScale(this._backgroundScaleWidthRatio,1),this.backgroundGround.setPosition(-this.backgroundGround.width*this._backgroundScaleWidthRatio/2+ +e/2,-this.backgroundGround.height+ +t)}createAirLevel(){const{width:e}=this._scene.sys.game.config;this.backgroundAir.setScale(this._backgroundScaleWidthRatio,1),this.backgroundAir.setPosition(-this.backgroundAir.width*this._backgroundScaleWidthRatio/2+ +e/2,this.backgroundGround.y-this.backgroundAir.height)}createCloudsLevel(){const{width:e}=this._scene.sys.game.config;this.backgroundClouds.setScale(this._backgroundScaleWidthRatio,1),this.backgroundClouds.setPosition(-this.backgroundClouds.width*this._backgroundScaleWidthRatio/2+ +e/2,this.backgroundAir.y-this.backgroundClouds.height)}createNloLevel(){const{width:e}=this._scene.sys.game.config;this.backgroundNlo.setScale(this._backgroundScaleWidthRatio,1),this.backgroundNlo.setPosition(-this.backgroundNlo.width*this._backgroundScaleWidthRatio/2+ +e/2,this.backgroundClouds.y-this.backgroundNlo.height)}createSpaceLevel(){const{width:e}=this._scene.sys.game.config;this.backgroundSpace.setScale(this._backgroundScaleWidthRatio,1),this.backgroundSpace.setPosition(-this.backgroundSpace.width*this._backgroundScaleWidthRatio/2+ +e/2,this.backgroundNlo.y-this.backgroundSpace.height)}}class GameScreen{constructor(e,t,i){__publicField(this,"_scene"),__publicField(this,"_view"),__publicField(this,"_gameScreenSwipeVelocity",SWIPE_VELOCITY),__publicField(this,"_currentDirection",SWIPE_DIRECTIONS.NONE),this._scene=e,this._view=new GameScreenView(e,t,i),e.add.container(t,i,this._view)}updateGameScreenPosition(e,t){e||t||(this._currentDirection=SWIPE_DIRECTIONS.NONE),this._view.setPosition(e,t)}isGroundLevel(){return this.y<Math.abs(this._view.backgroundGround.y-BALLOON_STARTED_OFFSET)}isAirLevel(){return this.y>Math.abs(this._view.backgroundGround.y)&&this.y<=Math.abs(this._view.backgroundAir.y)}isCloudsLevel(){return this.y>Math.abs(this._view.backgroundAir.y)&&this.y<=Math.abs(this._view.backgroundClouds.y)}isNloLevel(){return this.y>Math.abs(this._view.backgroundClouds.y)&&this.y<=Math.abs(this._view.backgroundNlo.y)}isSpaceLevel(){return this.y>Math.abs(this._view.backgroundNlo.y)&&this.y<=Math.abs(this._view.backgroundSpace.y)}update(e){const{width:t}=this._scene.sys.game.config;if(this.updateGameScreenPosition(this.x,this.y+e),!this._currentDirection||this._currentDirection===SWIPE_DIRECTIONS.LEFT&&this._view.x===+t/2||this._currentDirection===SWIPE_DIRECTIONS.RIGHT&&this._view.x===-t/2)return;let i=this._view.x+this._gameScreenSwipeVelocity*this._currentDirection;Math.abs(i)+Math.abs(this._view.x)===this._gameScreenSwipeVelocity&&0!==i&&0!==this._view.x&&(i=0),i<=-t/2||i>=+t/2||0===i?(0!==i?this._view.setX(+t/2*this._currentDirection):this._view.setX(0),this._currentDirection=SWIPE_DIRECTIONS.NONE):this._view.setX(i)}addEntityOnScreen(e){this._view.add(e.view)}moveToLeft(){this._currentDirection=SWIPE_DIRECTIONS.LEFT}moveToRight(){this._currentDirection=SWIPE_DIRECTIONS.RIGHT}get x(){return this._view.x}get y(){return this._view.y}}class WaitingNewGameTimerView extends Phaser.GameObjects.Container{constructor(e,t,i){super(e,t,i),__publicField(this,"_scene"),__publicField(this,"_timerText"),this._scene=e,this.build(t,i)}build(e,t){this._timerText=this._scene.add.text(e,t,"",{fontFamily:'Georgia, "Goudy Bookletter 1911", Times, serif',fontSize:30}).setOrigin(.5),this._timerText.setVisible(!1)}setTimerText(e){this._timerText.setText(e)}setTimerVisible(e){this._timerText.setVisible(e)}destroy(){this._timerText.destroy()}}class WaitingNewGameTimer{constructor(e,t,i){__publicField(this,"_scene"),__publicField(this,"_view"),__publicField(this,"_timer"),__publicField(this,"_timerLength"),__publicField(this,"_timerStopCallback"),this._scene=e,this._view=new WaitingNewGameTimerView(e,t,i)}startTimer(e,t,i){this._timerLength=e,this._timerStopCallback=i,this._view.setTimerVisible(!0),this.runNewTick(t)}runNewTick(e){this._view.setTimerText(String(e)),e<=this._timerLength?this._timer=setTimeout((()=>{this.runNewTick(e+1)}),1e3):this.stopTimer()}isTimerRunning(){return Boolean(this._timer)}stopTimer(){clearTimeout(this._timer),this._timer=0,this._view.setTimerVisible(!1),this._view.setTimerText(""),this._timerStopCallback()}}class Physics{static isCheckIntersection(e,t){return e.x<t.x+t.width&&e.x+e.width>t.x&&e.y<t.y+t.height&&e.y+e.height>t.y}}const BASE_DIRECTION=Object.freeze({LEFT:"LEFT",RIGHT:"RIGHT",DOWN:"DOWN",UP:"UP"});var DIRECTIONS=(e=>(e.LEFT="LEFT",e.RIGHT="RIGHT",e.DOWN="DOWN",e.UP="UP",e.NONE="NONE",e))(DIRECTIONS||{});const DIRECTION=Object.freeze({...BASE_DIRECTION,NONE:"NONE"});class Swipe{constructor(e,t){__privateAdd(this,_Swipe_instances),__privateAdd(this,_scene),__privateAdd(this,_lastPointerDownLocation),__privateAdd(this,_lastPointerUpLocation),__privateAdd(this,_swipeDirection),__privateAdd(this,_config),__privateSet(this,_scene,e),__privateSet(this,_lastPointerDownLocation,new Phaser.Math.Vector2(0,0)),__privateSet(this,_lastPointerUpLocation,new Phaser.Math.Vector2(0,0)),__privateSet(this,_swipeDirection,"NONE"),__privateSet(this,_config,t),__privateMethod(this,_Swipe_instances,setupEvents_fn).call(this)}}function getRandomInt(e,t){const i=Math.ceil(e),s=Math.floor(t);return Math.floor(Math.random()*(s-i)+i)}_scene=new WeakMap,_lastPointerDownLocation=new WeakMap,_lastPointerUpLocation=new WeakMap,_swipeDirection=new WeakMap,_config=new WeakMap,_Swipe_instances=new WeakSet,setupEvents_fn=function(){__privateGet(this,_scene).input.on(Phaser.Input.Events.POINTER_DOWN,__privateMethod(this,_Swipe_instances,handlePointerDown_fn),this),__privateGet(this,_scene).input.on(Phaser.Input.Events.POINTER_UP,__privateMethod(this,_Swipe_instances,handlePointerUp_fn),this),__privateGet(this,_scene).events.once(Phaser.Scenes.Events.SHUTDOWN,(()=>{__privateGet(this,_scene).input.off(Phaser.Input.Events.POINTER_DOWN,__privateMethod(this,_Swipe_instances,handlePointerDown_fn),this),__privateGet(this,_scene).input.off(Phaser.Input.Events.POINTER_UP,__privateMethod(this,_Swipe_instances,handlePointerUp_fn),this)}))},handlePointerDown_fn=function(e){__privateSet(this,_lastPointerDownLocation,e.position.clone())},handlePointerUp_fn=function(e){__privateSet(this,_lastPointerUpLocation,e.position.clone()),__privateMethod(this,_Swipe_instances,handleSwipe_fn).call(this),__privateGet(this,_swipeDirection)!==DIRECTION.NONE&&__privateGet(this,_config)&&__privateGet(this,_config).swipeDetectedCallback&&__privateGet(this,_config).swipeDetectedCallback(__privateGet(this,_swipeDirection))},handleSwipe_fn=function(){if(__privateGet(this,_lastPointerDownLocation).x===__privateGet(this,_lastPointerUpLocation).x&&__privateGet(this,_lastPointerDownLocation).y===__privateGet(this,_lastPointerUpLocation).y)return void __privateSet(this,_swipeDirection,"NONE");const e=Phaser.Math.Angle.BetweenPoints(__privateGet(this,_lastPointerDownLocation),__privateGet(this,_lastPointerUpLocation)),t=Phaser.Math.RadToDeg(e),i=Math.abs(t);__privateSet(this,_swipeDirection,i<=45?"RIGHT":i>=135?"LEFT":t<0?"UP":"DOWN")};class Game extends Phaser$1.Scene{constructor(){super({key:"Game",active:!1}),__publicField(this,"_balloonFactory"),__publicField(this,"_enemyFactory"),__publicField(this,"_resultMessagesBox"),__publicField(this,"_waitingNewGameTimer"),__publicField(this,"_balloon"),__publicField(this,"_gameScreen"),__publicField(this,"_currentLevel",LEVELS.GROUND),__publicField(this,"_spawnTimer"),__publicField(this,"_waitingAfterGameTimer"),__publicField(this,"_enemies",[]),__publicField(this,"_isGamePaused",!1),__publicField(this,"_backgroundSpeed",BACKGROUND_SPEED),this._balloonFactory=new BalloonFactory(this),this._enemyFactory=new EnemyFactory(this)}create(){const{width:e,height:t}=this.sys.game.config;this._gameScreen=new GameScreen(this,0,0),this._resultMessagesBox=new ResultMessage(this,+e/2,+t/2),this._waitingNewGameTimer=new WaitingNewGameTimer(this,+e/2,+t/2),this._balloon=this._balloonFactory.create(+e/2,+t-BALLOON_STARTED_OFFSET),new Swipe(this,{swipeDetectedCallback:this.handleSwipe.bind(this)}),this.startSpawnEnemies()}handleSwipe(e){if(!this._waitingNewGameTimer.isTimerRunning())switch(e){case DIRECTIONS.RIGHT:this._gameScreen.moveToRight();break;case DIRECTIONS.LEFT:this._gameScreen.moveToLeft()}}update(){this._balloon.isDead||this._isGamePaused||this._isGamePaused||this.updateGameScreen()}startSpawnEnemies(){const{width:e,height:t}=this.sys.game.config,i=[0,+e/4,+e/2];let s=0;this._spawnTimer=setInterval((()=>{if(this.setCurrentLevel(),this._gameScreen.y<s+100)return;const e=-(this._gameScreen.y+SPAWN_ENEMIES_OFFSET)/2;if(s=this._gameScreen.y,e>+t-MAX_FLY_HEIGHT){const t=this._enemyFactory.create(i[getRandomInt(0,i.length)],e,this._currentLevel);this._gameScreen.addEntityOnScreen(t),this._enemies.push(t)}}),SPAWN_ENEMIES_RATE)}clearLevel(){const{width:e,height:t}=this.sys.game.config;clearInterval(this._spawnTimer),this._enemies.forEach((e=>{e.destroy()})),this._enemies=[],this._balloon=this._balloonFactory.create(+e/2,+t-BALLOON_STARTED_OFFSET),this._gameScreen.updateGameScreenPosition(0,0),this._isGamePaused=!0}checkDamage(e){const{width:t}=this.sys.game.config;for(let i of this._enemies)if(Physics.isCheckIntersection({width:e.collisionBox.width,height:e.collisionBox.height,x:-1*(this._gameScreen.x-+t/2)-e.collisionBox.width/2,y:-(this._gameScreen.y-e.collisionBox.y)},{width:i.collisionBox.width,height:i.collisionBox.height,x:2*i.collisionBox.x+i.collisionBox.width/2,y:2*i.collisionBox.y+i.collisionBox.height/2})){e.dead(),this._resultMessagesBox.showLoseText(),this.startWaitingTimer();break}}startWaitingTimer(){this._waitingAfterGameTimer=setTimeout((()=>{this.clearLevel(),this.startSpawnEnemies(),this._resultMessagesBox.clearAllText(),this._waitingNewGameTimer.startTimer(WAITING_NEW_GAME_LENGTH/1e3,1,(()=>{this._isGamePaused=!1}))}),WAITING_NEW_GAME_LENGTH)}setCurrentLevel(){this._gameScreen.isGroundLevel()?this._currentLevel=LEVELS.GROUND:this._gameScreen.isAirLevel()?this._currentLevel=LEVELS.AIR:this._gameScreen.isCloudsLevel()?this._currentLevel=LEVELS.CLOUDS:this._gameScreen.isNloLevel()?this._currentLevel=LEVELS.NLO:this._gameScreen.isSpaceLevel()&&(this._currentLevel=LEVELS.SPACE)}updateGameScreen(){const{height:e}=this.sys.game.config;if(this._gameScreen.y===MAX_FLY_HEIGHT-+e)return this._isGamePaused=!0,this._resultMessagesBox.showWinText(),void this.startWaitingTimer();this._gameScreen.update(this._backgroundSpeed),this.checkDamage(this._balloon)}destroy(){clearTimeout(this._waitingAfterGameTimer),clearInterval(this._spawnTimer),this._waitingNewGameTimer.stopTimer(),this.destroy()}}class App{start(){let e=[];e.push(new Boot),e.push(new Preload),e.push(new Game);const t={title:"OnlyUp",width:window.innerWidth>MAX_GAME_WIDTH?MAX_GAME_WIDTH:window.innerWidth,height:window.innerHeight,scene:e,pixelArt:!0,parent:"root",physics:{default:"arcade",arcade:{debug:!1}},audio:{noAudio:!0},disableContextMenu:!0,loader:{maxParallelDownloads:20},banner:!1,dom:{createContainer:!0},scale:{autoCenter:Phaser$1.Scale.CENTER_BOTH}};new Phaser$1.Game(t)}}function runApp(){(new App).start()}window.onload=function(){try{eval("let i = 0;"),eval("const _dev = true;")}catch(e){return alert("This browser is not supported. Use Chrome or Firefox"),!1}runApp()};
